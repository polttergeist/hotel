require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/admin/reviews", type: :request do
  
  # This should return the minimal set of attributes required to create a valid
  # Admin::Review. As you add validations to Admin::Review, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) {
    {
      name: Faker::Name.name,
      email: Faker::Internet.email,
      comment: Faker::Lorem.sentence
    }
  }

  let(:admin) {
    User.create! email: "sample@email.com", password: "samplepassword000", role: :admin
  }

  before { sign_in admin }

  describe "GET /index" do
    it "renders a successful response" do
      Review.create! valid_attributes
      sign_in(:admin)
      get admin_reviews_url
      expect(response).to be_successful
    end
  end

  describe "DELETE /destroy" do
    it "destroys the requested review" do
      review = Review.create! valid_attributes
      expect {
        delete admin_review_url(review)
      }.to change(Review, :count).by(-1)
    end

    it "redirects to the reviews list" do
      review = Review.create! valid_attributes
      delete admin_review_url(review)
      expect(response).to redirect_to(admin_reviews_url)
    end
  end
end
